#!/bin/sh

# Basic init script for AxNux with Nano-X

# Mount essential filesystems
mount -t proc none /proc
mount -t sysfs none /sys
mount -t devtmpfs none /dev

# Create additional mount points if needed
mkdir -p /tmp /var/log /dev/pts /dev/shm
mount -t tmpfs none /tmp
mount -t devpts devpts /dev/pts
mount -t tmpfs none /dev/shm

# Set up the environment
export PATH=/bin:/sbin:/usr/bin:/usr/sbin
export HOME=/root
export TERM=linux

# Display some debug info
echo "AxNux with Nano-X window manager"
echo "Kernel version: $(uname -a)"

# Debug info about system
echo "--------- SYSTEM INFO -----------------"
echo "PATH: $PATH"
echo "Available executables in /usr/bin/:"
ls -la /usr/bin/nano* 2>/dev/null || echo "No nano executables found"
echo "Available executables in /usr/bin/ (nx):"
ls -la /usr/bin/nx* 2>/dev/null || echo "No nx executables found"
echo "----------------------------------------"

# Check for library dependencies
echo "--------- LIBRARY CHECK --------------"
echo "Looking for required libraries:"
for LIB in libm.so.6 libpng16.so.16 libz.so.1 libfreetype.so.6 libc.so.6; do
    if find /lib /usr/lib -name "$LIB*" 2>/dev/null | grep -q .; then
        echo "$LIB: FOUND"
    else
        echo "$LIB: MISSING"
    fi
done
echo "----------------------------------------"

# Set up framebuffer
if [ -e /dev/fb0 ]; then
    echo "Framebuffer found: /dev/fb0"
    # Set permissions
    chmod 666 /dev/fb0
else
    echo "WARNING: No framebuffer device found! Attempting to create one..."
    mknod /dev/fb0 c 29 0
    chmod 666 /dev/fb0
    echo "Created framebuffer device"
fi

# Due to library dependencies issue, we can't run Nano-X directly
echo "Nano-X requires shared libraries that are not available in the initramfs."
echo "To fix this, you need to either:"
echo "1. Add the required shared libraries to your initramfs"
echo "2. Recompile Nano-X statically without dependencies"
echo "3. Create symlinks to the available libraries"

# Create necessary symlinks or directories if they don't exist
echo "Creating necessary directories and symlinks..."
mkdir -p /lib64
if [ ! -e /lib64/ld-linux-x86-64.so.2 ] && [ -e /lib/ld-linux-x86-64.so.2 ]; then
    ln -sf /lib/ld-linux-x86-64.so.2 /lib64/ld-linux-x86-64.so.2
    echo "Created symlink for ld-linux-x86-64.so.2"
fi

# Show a message with instructions for manual testing
echo ""
echo "=========================================="
echo "To manually test Nano-X, you can try:"
echo "1. /usr/bin/nano-X -v"
echo "2. If it works, start an application with: /usr/bin/nxterm"
echo "=========================================="

# Keep init running with a shell for debugging
echo "Starting shell for debugging..."
/bin/sh
